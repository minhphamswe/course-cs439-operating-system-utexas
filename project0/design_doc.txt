################
YOUR INFO
################
Name1: Easchner
EID1: easchner
CS login: easchner
Email: eric_aschner@hotmail.com
Unique Number: 52996

Slip days used:
----------------
Name2: Minh Pham
EID2: mlp2279
CS login: minhpham
Email: minh.pham@utexas.edu
Unique Number: 52996

Slip days used: 0

****EACH student submits a (unique) design document.****

################
Preliminaries
################
(1) If you have any preliminary comments on your submission, notes for
  the TAs, or extra credit, please give them here.

(2) Please cite any offline or online sources you consulted while
  preparing your submission, other than the Linux documentation,
  course text, and lecture notes.


################
Questions regarding Part 0
################
(1) How many child processes are created when doFib() begins with
  an input of 5?  Show the return value for each child process, numbering
  the processes beginning with 0 (the original process) and incrementing for
  each child process.

(2) Which flavor of exec did you choose to use?  Why?


################
Questions regarding Part 1
################
(1) In the provided utility function Signal(), what does the call to
  sigaction() do?  Why was sigaction() used instead of signal()?

(2) What is the last assembly language instruction executed by the
  signal handler function that you write?

(3) After the instruction just identified executes, what is the next
  assembly language instruction executed?

(4) When the signal handler finishes running, it must restore all of
  the registers from the interrupted thread to exactly their values
  before the signal occurred. How is this done?


################
Questions regarding Part 2
################
(1) In msh.c, we use three separate signal handlers to catch our signals. 
  You can also use a single signal handler to catch all three signals.  Is
  there a design advantage of one over the other?  Explain your answer.
